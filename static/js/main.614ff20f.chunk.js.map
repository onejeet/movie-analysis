{"version":3,"sources":["components/Header.js","components/Footer.js","components/Page.js","components/Pagination.js","components/MovieItem.js","components/Home.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","_this","this","react_default","a","createElement","className","name","id","value","props","theme","onChange","event","updateTheme","target","Component","Footer","aria-hidden","href","rel","Page","_this$props","pageid","icon","updatecurrentListStart","onClick","e","Home","generatePaginationIds","moviesSet","currentListStart","pages","undefined","components_Page","MovieItem","numberFormatter","num","formattedNum","toFixed","toLocaleString","movie","updatefilterr","imdb_link","title","director","actors","join","genres","map","genre","key","$","text","language","country","rating","budget","parseInt","year","filterr","moviesList","getFiltersData","years","reverse","countries","ratings","languages","directors","budgetMax","budgetTwoThird","budgetOneThird","components_Header","role","parent","split","toLowerCase","d","actor","length","i","components_MovieItem","Pagination","components_Footer","App","state","movies","loadData","fetch","then","response","json","data","status","forEach","item","movie_title","director_name","actor_1_name","actor_2_name","content_rating","title_year","keywords","plot_keywords","movie_imdb_link","push","console","log","setState","catch","error","newFilter","type","newStartIndex","displayCurrentList","slice","list","Math","max","apply","Object","toConsumableArray","Set","flat","sort","filter","el","filterMovies","_this$state","_loop","hasOwnProperty","v","find","val","_ret","addClass","removeAttr","_this$state2","sorting","components_Home","updateSorting","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.614ff20f.chunk.js","sourcesContent":["import React,{ Component } from 'react';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    render(){\r\n        return (\r\n        <header>\r\n            <div className=\"head-content\">\r\n                <div className=\"branding\">\r\n                    <h1> Movie Analysis</h1>\r\n                </div>\r\n                <div className=\"theme\">\r\n                    <select name=\"theme\" id=\"theme\"\r\n                    value={this.props.theme}\r\n                    onChange={(event) => this.props.updateTheme(event.target.value)}\r\n                    >\r\n                        <option value=\"light\">Light Theme</option>\r\n                        <option value=\"dark\">Dark Theme</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n        </header>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React,{ Component } from 'react';\r\n\r\n\r\nclass Footer extends Component {\r\n\r\n    render(){\r\n        return (\r\n        <footer>\r\n            <div>\r\n                <i className=\"fa fa-code\" aria-hidden=\"true\"></i> code by <a href=\"https://www.github.com/onejeet\" target=\"_blank\" rel=\"noopener noreferrer\" >Jitendra Sharma</a>\r\n            </div>\r\n        </footer>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React,{ Component } from 'react';\r\nimport '../sass/style.scss';\r\n\r\n\r\nclass Page extends Component {\r\n\r\n\r\n    render() {\r\n        const {pageid, icon, updatecurrentListStart} = this.props;\r\n        return (\r\n            <li><i id={pageid} onClick = {(e) => updatecurrentListStart(e)} className={\"fa \"+icon} aria-hidden=\"true\"></i></li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page;\r\n","import React,{ Component } from 'react';\r\nimport Page from './Page';\r\nimport '../sass/style.scss';\r\n\r\nclass Home extends Component {\r\n\r\n    generatePaginationIds = () => {\r\n        const {moviesSet, currentListStart}  = this.props;\r\n        let pages = [];\r\n        if(moviesSet[currentListStart-10] !== undefined){\r\n            pages[0] = currentListStart-10;\r\n        }else{\r\n            pages[0] = null;\r\n        }\r\n\r\n        if(moviesSet[currentListStart+10] !== undefined){\r\n            pages[1] = currentListStart+10;\r\n        }else{\r\n            pages[1] = null;\r\n        }\r\n        return pages;\r\n    }\r\n\r\n\r\n    render() {\r\n        const { updatecurrentListStart } = this.props;\r\n        let pages = this.generatePaginationIds();\r\n        return (\r\n            <ul>\r\n                {pages[0] !== null ? <Page\r\n                pageid = {pages[0]}\r\n                updatecurrentListStart = {updatecurrentListStart}\r\n                icon = 'fa-chevron-circle-left'\r\n                /> : ''}\r\n                {pages[1] !== null ? <Page\r\n                pageid = {pages[1]}\r\n                updatecurrentListStart = {updatecurrentListStart}\r\n                icon = 'fa-chevron-circle-right'\r\n                /> : ''}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React,{ Component } from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass MovieItem extends Component {\r\n    numberFormatter = (num) => {\r\n        let formattedNum;\r\n        switch (true) {\r\n            case (num > 999999999):\r\n                formattedNum = (num/1000000000).toFixed(1) + 'b';\r\n                break;\r\n            case (num > 999999):\r\n                formattedNum = (num/1000000).toFixed(1) + 'm';\r\n                break;\r\n            case (num > 9999):\r\n                formattedNum = (num/1000).toFixed(1) + 'k';\r\n                break;\r\n            default:\r\n                formattedNum = num.toLocaleString();\r\n        }\r\n        return formattedNum;\r\n    }\r\n\r\n    render(){\r\n        const {movie, updatefilterr} = this.props;\r\n\r\n        return (\r\n                <tr>\r\n                    <td className=\"title\"><a href={movie.imdb_link} target=\"_blank\" rel=\"noopener noreferrer\">{movie.title}<i className=\"fa fa-external-link-square\" aria-hidden=\"true\"></i></a></td>\r\n                    <td>{movie.director}</td>\r\n                    <td>{movie.actors.join(', ')}</td>\r\n                    <td className=\"genres\"><ul>{movie.genres.map((genre) =>\r\n                        <li key={\"genre-\"+genre} onClick={(event) => updatefilterr($(event.target).text(), 'genres')}>{genre}</li>\r\n                    )}</ul></td>\r\n                    <td>{movie.language}</td>\r\n                    <td>{movie.country}</td>\r\n                    <td>{movie.rating}</td>\r\n                    <td>{movie.budget ? \"$\"+this.numberFormatter(parseInt(movie.budget)).toLocaleString() : \" \"}</td>\r\n                    <td>{movie.year}</td>\r\n                </tr>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default MovieItem;\r\n","import React,{ Component } from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Pagination from './Pagination';\r\nimport  MovieItem from './MovieItem';\r\nimport '../sass/style.scss';\r\nimport $ from 'jquery';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        const {filterr, moviesList, moviesSet, currentListStart, updatecurrentListStart, updatefilterr, theme, getFiltersData, updateTheme} = this.props;\r\n        let years = getFiltersData('year').reverse();\r\n        let countries = getFiltersData('country');\r\n        let ratings = getFiltersData('rating');\r\n        let languages = getFiltersData('language');\r\n        let genres = getFiltersData('genres');\r\n        let actors = getFiltersData('actors');\r\n        let directors = getFiltersData('director');\r\n        let budget = getFiltersData('budget');\r\n        let budgetMax = parseInt(budget[1]);\r\n        let budgetTwoThird = parseInt(budget[1]*0.6666);\r\n        let budgetOneThird = parseInt(budget[1]*0.3333);\r\n\r\n        return (\r\n        <div className=\"main\">\r\n            <Header\r\n            theme = {theme}\r\n            updateTheme = {updateTheme}\r\n            />\r\n            <div className=\"grid\" role=\"grid\">\r\n                    <table className=\"movie-list container\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Director\r\n                                <select\r\n                                value={filterr.director}\r\n                                onChange={(event) => updatefilterr(event.target.value, $(event.target).parent().text().split(' ')[0].toLowerCase())}\r\n                                >\r\n                                <option value=\"all\"> all </option>\r\n                                {directors.map((d) =>\r\n                                    <option key={d} value={d}> {d} </option>\r\n                                )}\r\n                                </select>\r\n                            </th>\r\n                            <th>Actors\r\n                                <select\r\n                                value={filterr.actors}\r\n                                onChange={(event) => updatefilterr(event.target.value, $(event.target).parent().text().split(' ')[0].toLowerCase())}\r\n                                >\r\n                                <option value=\"all\"> all </option>\r\n                                {actors.map((actor) =>\r\n                                    <option key={actor} value={actor}> {actor} </option>\r\n                                )}\r\n                                </select>\r\n                            </th>\r\n                            <th>Genres\r\n                                <select\r\n                                value={filterr.genres}\r\n                                onChange={(event) => updatefilterr(event.target.value, $(event.target).parent().text().split(' ')[0].toLowerCase())}\r\n                                >\r\n                                <option value=\"all\"> all </option>\r\n                                {genres.map((genre) =>\r\n                                    <option key={genre} value={genre}> {genre} </option>\r\n                                )}\r\n                                </select>\r\n                            </th>\r\n                            <th>Language\r\n                                <select\r\n                                value={filterr.language}\r\n                                onChange={(event) => updatefilterr(event.target.value, $(event.target).parent().text().split(' ')[0].toLowerCase())}\r\n                                >\r\n                                <option value=\"all\"> all </option>\r\n                                {languages.map((year) =>\r\n                                    <option key={year} value={year}> {year} </option>\r\n                                )}\r\n                                </select>\r\n                            </th>\r\n                            <th>Country\r\n                                <select\r\n                                value={filterr.country}\r\n                                onChange={(event) => updatefilterr(event.target.value, $(event.target).parent().text().split(' ')[0].toLowerCase())}\r\n                                >\r\n                                <option value=\"all\"> all </option>\r\n                                {countries.map((country) =>\r\n                                    <option key={country} value={country}> {country} </option>\r\n                                )}\r\n                                </select>\r\n                            </th>\r\n                            <th>Rating\r\n                                <select\r\n                                value={filterr.rating}\r\n                                onChange={(event) => updatefilterr(event.target.value, $(event.target).parent().text().split(' ')[0].toLowerCase())}\r\n                                >\r\n                                <option value=\"all\"> all </option>\r\n                                {ratings.map((rating) =>\r\n                                    <option key={rating} value={rating}> {rating} </option>\r\n                                )}\r\n                                </select>\r\n                            </th>\r\n                            <th>Budget\r\n                                <select\r\n                                value={filterr.budget}\r\n                                onChange={(event) => updatefilterr(event.target.value, $(event.target).parent().text().split(' ')[0].toLowerCase())}\r\n                                >\r\n                                <option value=\"all\"> all </option>\r\n                                <option value={budgetMax}>$0 - {'$'+budgetMax.toLocaleString()} </option>\r\n                                <option value={budgetTwoThird}>$0 - {'$'+budgetTwoThird.toLocaleString()} </option>\r\n                                <option value={budgetOneThird}>$0 - {'$'+budgetOneThird.toLocaleString()} </option>\r\n                                </select>\r\n                            </th>\r\n                            <th>Year\r\n                                <select\r\n                                value={filterr.year}\r\n                                onChange={(event) => updatefilterr(event.target.value, $(event.target).parent().text().split(' ')[0].toLowerCase())}\r\n                                >\r\n                                <option value=\"all\"> all </option>\r\n                                {years.map((year) =>\r\n                                    <option key={year}  value={year}> {year} </option>\r\n                                )}\r\n                                </select>\r\n                            </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {moviesList.length>0 ? moviesList.map((movie, i) =>\r\n                                <MovieItem\r\n                                key = {i}\r\n                                movie = {movie}\r\n                                updatefilterr = {updatefilterr}\r\n                                />\r\n                        ): null}\r\n                        </tbody>\r\n                    </table>\r\n            </div>\r\n            <div className=\"pagination\">\r\n                <Pagination\r\n                moviesSet = {moviesSet}\r\n                currentListStart = {currentListStart}\r\n                updatecurrentListStart = {updatecurrentListStart}\r\n                />\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport  Home from './Home';\r\nimport $ from 'jquery';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        movies:[],\r\n        currentListStart:0,\r\n        filterr:{\r\n            language:'all',\r\n            country:'all',\r\n            rating:'all',\r\n            year:'all',\r\n            budget:'all',\r\n            genres:'all',\r\n            actors:'all',\r\n            director:'all'\r\n        },\r\n        theme:'light'\r\n    }\r\n\r\n    componentDidMount(){\r\n        $('body').addClass(this.state.theme+'-theme');\r\n        this.loadData();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        $('body').removeAttr('class');\r\n        $('body').addClass(this.state.theme+'-theme');\r\n    }\r\n\r\n    loadData = () => {\r\n        const {movies} = this.state;\r\n        let movie;\r\n        const url = `http://www.mocky.io/v2/5d232ea22e0000ed75c3ef14`;\r\n        //NOTE: USE Plugin: Allow-control-allow-origin for CROSS Browser Requests\r\n        \r\n        //fetch data from API\r\n        fetch(url)\r\n        .then((response) => {\r\n            response.json().then((data) => {\r\n                if (response.status === 200) {\r\n                    data.forEach((item) => {\r\n                        movie = { title: item.movie_title, director: item.director_name, actors:[item.actor_1_name, item.actor_2_name], genres: item.genres.split('|'),language:item.language, country:item.country, rating:item.content_rating, budget:item.budget, year: item.title_year, keywords: item.plot_keywords.split('|'), imdb_link:item.movie_imdb_link}\r\n\r\n                        movies.push(movie);\r\n                    });\r\n                } else {\r\n                    console.log('Sorry, Unable to retrieve data from API');\r\n                }\r\n            this.setState({movies});\r\n            }).catch((error) => {\r\n                console.log('Call is Not Successful '+error);\r\n            })\r\n         }).catch((error) => {\r\n            console.log('API Not Responding'+error)\r\n        });\r\n\r\n    }\r\n    updateTheme = (theme) => {\r\n        this.setState({theme:theme});\r\n    }\r\n\r\n    updatefilterr = (newFilter, type) => {\r\n        const { filterr } = this.state;\r\n        filterr[type] = newFilter;\r\n        this.setState({filterr:filterr});\r\n    }\r\n\r\n    updatecurrentListStart = (e) => {\r\n        let newStartIndex = parseInt($(e.target)[0].id);\r\n        this.setState({ currentListStart: newStartIndex})\r\n    }\r\n\r\n    displayCurrentList = (movies) => {\r\n        const {currentListStart}  = this.state;\r\n        return movies.slice(currentListStart, currentListStart+10);\r\n    }\r\n\r\n    getFiltersData = (type) => {\r\n        const {movies} = this.state;\r\n        let list;\r\n        if(type !== \"genres\" && type !== \"budget\"){\r\n            list = movies.map((movie) => movie[type]);\r\n        }else if(type === \"budget\"){\r\n            let budget = movies.map((movie) => movie[type]);\r\n            list = [0, Math.max(...budget)];\r\n        }else{\r\n            list = movies.map((movie) => movie[type]);\r\n        }\r\n        return [...new Set(list.flat())].sort().filter((el) => el !== \"\" );\r\n    }\r\n\r\n    filterMovies = () => {\r\n        const {movies, filterr} = this.state;\r\n        let filterredMovies = movies;\r\n        filterredMovies = movies.filter((movie) => {\r\n            for (let key in filterr){\r\n                if (filterr.hasOwnProperty(key)) {\r\n                    if(key !== 'genres' && key !== 'actors' &&  key !== 'budget'){\r\n                        if((filterr[key]=== 'all') || movie[key] === filterr[key]){\r\n                            continue;\r\n                        }else{\r\n                            return false;\r\n                        }\r\n                    } else if(key !== 'budget') {\r\n                        if((filterr[key]=== 'all') || movie[key].find((val) => val===filterr[key])){\r\n                            continue;\r\n                        }else{\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        if((filterr[key]=== 'all') || movie[key] < parseInt(filterr[key])){\r\n                            continue;\r\n                        }else{\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        return filterredMovies;\r\n    }\r\n\r\n    render() {\r\n        const {filterr,currentListStart, theme, sorting} = this.state;\r\n        let moviesSet = this.filterMovies();\r\n        let moviesList = this.displayCurrentList(moviesSet);\r\n        return (\r\n            <Home\r\n            moviesList = {moviesList}\r\n            moviesSet = {moviesSet}\r\n            filterr = {filterr}\r\n            updatefilterr = {this.updatefilterr}\r\n            currentListStart = {currentListStart}\r\n            theme = {theme}\r\n            updatecurrentListStart = {this.updatecurrentListStart}\r\n            getFiltersData = {this.getFiltersData}\r\n            updateTheme = {this.updateTheme}\r\n            updateSorting = {this.updateSorting}\r\n            />\r\n        );\r\n        }\r\n    }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}